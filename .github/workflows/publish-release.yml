name: publish-release.yml

on:
  release:
    types:
      - published

jobs:
  publish:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@afe4af09a72596f47d806ee5f8b2674ec07fdc73
      with:
          fetch-depth: 0

    - name: Check Version against Tag
      run: |
        echo "Checking package.json version against tag..."
        TagVersion=${{ github.event.release.tag_name }}
        PackageJsonVersion=v$(sed 's/.*"version": "\(.*\)".*/\1/;t;d' ./package.json)
        if [ "$TagVersion" != "$PackageJsonVersion" ];
        then
          echo "Version $PackageJsonVersion does not match tag $TagVersion"
          exit 1
        fi
        echo "package.json version matches tag: $TagVersion"

    - name: Load .nvmrc
      run: echo ::set-output name=NVMRC::"$(cat .nvmrc)"
      id: nvm

    - name: Setup Node
      uses: actions/setup-node@041bafb67276a76a9cc88cd8a4e99165e9eb287d
      with:
        node-version: '${{ steps.nvm.outputs.NVMRC }}'

    - name: Install dependencies
      env:
        PROXIMA_PACKAGE_TOKEN: ${{ secrets.PROXIMA_CI }}
      run: npm ci

    - name: Build
      run: gulp build

    - name: Publish
      env:
        PROXIMA_PACKAGE_TOKEN: ${{ secrets.PROXIMA_CI }}
      run: npm publish
